*** This is nuXmv 2.0.0 (compiled on Mon Oct 14 18:05:39 2019)
*** Copyright (c) 2014-2019, Fondazione Bruno Kessler
*** For more information on nuXmv see https://nuxmv.fbk.eu
*** or email to <nuxmv@list.fbk.eu>.
*** Please report bugs at https://nuxmv.fbk.eu/bugs
*** (click on "Login Anonymously" to access)
*** Alternatively write to <nuxmv@list.fbk.eu>.

*** This version of nuXmv is linked to NuSMV 2.6.0.
*** For more information on NuSMV see <http://nusmv.fbk.eu>
*** or email to <nusmv-users@list.fbk.eu>.
*** Copyright (C) 2010-2019, Fondazione Bruno Kessler

*** This version of nuXmv is linked to the CUDD library version 2.4.1
*** Copyright (c) 1995-2004, Regents of the University of Colorado

*** This version of nuXmv is linked to the MiniSat SAT solver. 
*** See http://minisat.se/MiniSat.html
*** Copyright (c) 2003-2006, Niklas Een, Niklas Sorensson
*** Copyright (c) 2007-2010, Niklas Sorensson

*** This version of nuXmv is linked to MathSAT
*** Copyright (C) 2009-2019 by Fondazione Bruno Kessler
*** Copyright (C) 2009-2019 by University of Trento and others
*** See http://mathsat.fbk.eu

-- specification !( F (((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((b00 != bx & b01 != bx) & b02 != bx) & b03 != bx) & b04 != bx) & b05 != bx) & b06 != bx) & b07 != bx) & b08 != bx) & b09 != bx) & b010 != bx) & b10 != bx) & b11 != bx) & b12 != bx) & b13 != bx) & b14 != bx) & b15 != bx) & b16 != bx) & b17 != bx) & b18 != bx) & b19 != bx) & b110 != bx) & b20 != bx) & b21 != bx) & b22 != bx) & b23 != bx) & b24 != bx) & b25 != bx) & b26 != bx) & b27 != bx) & b28 != bx) & b29 != bx) & b210 != bx) & b30 != bx) & b31 != bx) & b32 != bx) & b33 != bx) & b34 != bx) & b35 != bx) & b36 != bx) & b37 != bx) & b38 != bx) & b39 != bx) & b310 != bx) & b40 != bx) & b41 != bx) & b42 != bx) & b43 != bx) & b44 != bx) & b45 != bx) & b46 != bx) & b47 != bx) & b48 != bx) & b49 != bx) & b410 != bx) & b50 != bx) & b51 != bx) & b52 != bx) & b53 != bx) & b54 != bx) & b55 != bx) & b56 != bx) & b57 != bx) & b58 != bx) & b59 != bx) & b510 != bx) & b60 != bx) & b61 != bx) & b62 != bx) & b63 != bx) & b64 != bx) & b65 != bx) & b66 != bx) & b67 != bx) & b68 != bx) & b69 != bx) & b610 != bx) & b70 != bx) & b71 != bx) & b72 != bx) & b73 != bx) & b74 != bx) & b75 != bx) & b76 != bx) & b77 != bx) & b78 != bx) & b79 != bx) & b710 != bx) & b80 != bx) & b81 != bx) & b82 != bx) & b83 != bx) & b84 != bx) & b85 != bx) & b86 != bx) & b87 != bx) & b88 != bx) & b89 != bx) & b810 != bx) & b90 != bx) & b91 != bx) & b92 != bx) & b93 != bx) & b94 != bx) & b95 != bx) & b96 != bx) & b97 != bx) & b98 != bx) & b99 != bx) & b910 != bx))  is false
-- as demonstrated by the following execution sequence
Trace Description: LTL Counterexample 
Trace Type: Counterexample 
  -> State: 1.1 <-
    dr = s
    i = 4
    j = 3
    right = FALSE
    left = FALSE
    down = FALSE
    up = FALSE
    b00 = wall
    b01 = wall
    b02 = wall
    b03 = wall
    b04 = wall
    b05 = wall
    b06 = wall
    b07 = wall
    b08 = wall
    b09 = wall
    b010 = wall
    b10 = wall
    b11 = flr
    b12 = flr
    b13 = flr
    b14 = flr
    b15 = flr
    b16 = flr
    b17 = wall
    b18 = wall
    b19 = wall
    b110 = wall
    b20 = wall
    b21 = flr
    b22 = flr
    b23 = wall
    b24 = flr
    b25 = flr
    b26 = bx
    b27 = target
    b28 = wall
    b29 = wall
    b210 = wall
    b30 = wall
    b31 = flr
    b32 = bx
    b33 = flr
    b34 = flr
    b35 = target
    b36 = flr
    b37 = flr
    b38 = wall
    b39 = wall
    b310 = wall
    b40 = wall
    b41 = flr
    b42 = flr
    b43 = man
    b44 = wall
    b45 = flr
    b46 = flr
    b47 = flr
    b48 = wall
    b49 = wall
    b410 = wall
    b50 = wall
    b51 = wall
    b52 = wall
    b53 = flr
    b54 = flr
    b55 = flr
    b56 = flr
    b57 = bxtrg
    b58 = wall
    b59 = wall
    b510 = wall
    b60 = wall
    b61 = wall
    b62 = wall
    b63 = wall
    b64 = wall
    b65 = flr
    b66 = flr
    b67 = flr
    b68 = flr
    b69 = flr
    b610 = wall
    b70 = wall
    b71 = wall
    b72 = wall
    b73 = wall
    b74 = wall
    b75 = wall
    b76 = wall
    b77 = flr
    b78 = bx
    b79 = flr
    b710 = wall
    b80 = wall
    b81 = wall
    b82 = wall
    b83 = wall
    b84 = wall
    b85 = wall
    b86 = wall
    b87 = flr
    b88 = target
    b89 = flr
    b810 = wall
    b90 = wall
    b91 = wall
    b92 = wall
    b93 = wall
    b94 = wall
    b95 = wall
    b96 = wall
    b97 = wall
    b98 = wall
    b99 = wall
    b910 = wall
    n = 11
    m = 10
  -> State: 1.2 <-
    dr = l
    j = 2
    left = TRUE
    down = TRUE
    up = TRUE
    b42 = man
    b43 = flr
  -> State: 1.3 <-
    j = 1
    right = TRUE
    down = FALSE
    b41 = man
    b42 = flr
  -> State: 1.4 <-
    dr = u
    i = 3
    left = FALSE
    b31 = man
    b41 = flr
  -> State: 1.5 <-
    dr = r
    j = 2
    down = TRUE
    b31 = flr
    b32 = man
    b33 = bx
  -> State: 1.6 <-
    j = 3
    left = TRUE
    b32 = flr
    b33 = man
    b34 = bx
  -> State: 1.7 <-
    j = 4
    up = FALSE
    b33 = flr
    b34 = man
    b35 = bxtrg
  -> State: 1.8 <-
    dr = u
    i = 2
    down = FALSE
    up = TRUE
    b24 = man
    b34 = flr
  -> State: 1.9 <-
    dr = r
    j = 5
    left = FALSE
    down = TRUE
    b24 = flr
    b25 = man
  -> State: 1.10 <-
    j = 6
    left = TRUE
    b25 = flr
    b26 = man
    b27 = bxtrg
  -> State: 1.11 <-
    dr = d
    i = 3
    right = FALSE
    b26 = flr
    b36 = man
  -> State: 1.12 <-
    i = 4
    right = TRUE
    b36 = flr
    b46 = man
  -> State: 1.13 <-
    i = 5
    b46 = flr
    b56 = man
  -> State: 1.14 <-
    i = 6
    right = FALSE
    b56 = flr
    b66 = man
  -> State: 1.15 <-
    dr = r
    j = 7
    right = TRUE
    down = FALSE
    b66 = flr
    b67 = man
  -> State: 1.16 <-
    j = 8
    down = TRUE
    b67 = flr
    b68 = man
  -> State: 1.17 <-
    dr = d
    i = 7
    up = FALSE
    b68 = flr
    b78 = man
    b88 = bxtrg
  -- Loop starts here
  -> State: 1.18 <-
    dr = l
    j = 7
    down = FALSE
    up = TRUE
    b77 = man
    b78 = flr
  -> State: 1.19 <-
    dr = r
    j = 8
    left = FALSE
    down = TRUE
    b77 = flr
    b78 = man
  -> State: 1.20 <-
    dr = l
    j = 7
    left = TRUE
    down = FALSE
    b77 = man
    b78 = flr
